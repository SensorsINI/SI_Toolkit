library: 'TF'  # TF or Pytorch
modeling:
  NET_NAME: 'GRU-32H1-32H2'
paths:
  PATH_TO_EXPERIMENT_FOLDERS:   './SI_Toolkit_ASF/Experiments/'     # Path where the experiments are stored
  path_to_experiment:           'Pretrained-RNN-1'                  # Path relative to PATH_TO_EXPERIMENT_FOLDERS to the particular experiment folder
  DATA_FOLDER:                  'Recordings'                        # Folder within path_to_experiment where the experimental data is stored

training_default:
  # For training closed loop dynamics model:
  control_inputs: ['Q']
  state_inputs: ['angle_sin', 'angle_cos', 'angleD', 'position', 'positionD']
  setpoint_inputs: []  # Can be only 'target' or empty for CartPole
  outputs: ['angle_sin', 'angle_cos', 'angleD', 'position', 'positionD']
  translation_invariant_variables: []
  # For training open loop dynamics model:
  # inputs = ['position', 'positionD', 'angle_sin', 'angle_cos', 'angleD']
  # outputs = inputs_list
  # For training of RNN imitating MPC:
  # inputs = ['position', 'positionD', 'angle', 'angleD', 'target']
  # outputs = ['Q']
  EPOCHS: 5
  BATCH_SIZE: 16
  SEED: 1873
  LR: 1.0e-2
  WASH_OUT_LEN: 10
  POST_WASH_OUT_LEN: 20
  ON_FLY_DATA_GENERATION: False
  NORMALIZE: True
  SHIFT_LABELS: 1  # for k, as a label to row i is taken row i+k
  USE_NNI: False  # Decide if you want to use NNI package
  CONSTRUCT_NETWORK: 'with cells'  # Matters only for Pytorch

